# demo_setup.yml

- hosts: localhost
  connection: local
  gather_facts: True
 
  tasks:

    - name: Provision a Webserver Instance
      ec2:
         #access_key: "{{ ec2_access_key }}"
         #secret_key: "{{ ec2_secret_key }}"
         key_name: "{{ ec2_keypair }}"
         group_id: "{{ ec2_security_group }}"
         instance_type: "{{ ec2_instance_type }}"
         image: "{{ ec2_image }}"
         region: "{{ ec2_region }}"
         vpc_subnet_id: "{{ ec2_vpc_subnet }}"
         #count: "{{ ec2_instance_count }}"
         wait: false
         assign_public_ip: yes
         exact_count: "{{ ec2_instance_count }}"
         count_tag:
            Name: Demo_Linux_Webserver
         instance_tags:
            ansible_group: webservers
            Name: Demo_Linux_Webserver
      tags:
         - webserver
      register: ec2
      
    - name: Provision a DBServer Instance
      ec2:
         #access_key: "{{ ec2_access_key }}"
         #secret_key: "{{ ec2_secret_key }}"
         keypair: "{{ ec2_keypair }}"
         group_id: "{{ ec2_security_group }}"
         type: "{{ ec2_instance_type }}"
         image: "{{ ec2_image }}"
         region: "{{ ec2_region }}"
         vpc_subnet_id: "{{ ec2_vpc_subnet }}"
         #count: "{{ ec2_instance_count }}"
         wait: false
         assign_public_ip: yes
         exact_count: "{{ ec2_instance_count }}"
         count_tag:
            Name: Demo_Linux_DBserver
         instance_tags:
            ansible_group: dbservers
            Name: Demo_Linux_DBserver
      tags:
         - dbserver
      register: ec2

    - name: Provision a Jenkins Instance
      ec2:
         #access_key: "{{ ec2_access_key }}"
         #secret_key: "{{ ec2_secret_key }}"
         keypair: "{{ ec2_keypair }}"
         group_id: "{{ ec2_security_group }}"
         type: "{{ ec2_instance_type }}"
         image: "{{ ec2_image }}"
         region: "{{ ec2_region }}"
         vpc_subnet_id: "{{ ec2_vpc_subnet }}"
         #count: "{{ ec2_instance_count }}"
         wait: false
         assign_public_ip: yes
         exact_count: "{{ ec2_instance_count }}"
         count_tag:
            Name: Demo_Linux_Jenkins
         instance_tags:
            ansible_group: jenkins
            Name: Demo_Linux_Jenkins
      tags:
         - jenkins
      register: ec2

    - name: Add all instances public IPs to host group
      add_host: hostname="{{ item.public_ip }}" groupname=dbservers
      with_items: "{{ ec2.instances }}"
      #with_items: "{{ tag_Name_Dbserver }}"
